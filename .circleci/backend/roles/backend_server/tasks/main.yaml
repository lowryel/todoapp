- name: update and upgrade system
  ansible.builtin.apt:
    upgrade: yes
    update_cache: yes
    cache_valid_time: 86400


- name: Print a message
  ansible.builtin.debug:
    msg: "this task runs after the example role"


- name: Install web server
  apt:
    name: nginx
    state: present

- name: start apache server
  service:
    name: nginx
    state: started

- name: python pip
  ansible.builtin.apt:
    name: python3-pip
    state: present

- name: create a directory
  ansible.builtin.file:
    path: $HOME/{{ item }}
    state: directory
  loop: 
    - taskapp
    - to_do
    - conf
    - static
    - templates


- name: "Copy files to server"
  ansible.builtin.copy:
    src: "files/artifact.tar.gz"
    dest: "$HOME/taskapp/artifact.tar.gz"
    follow: yes

- name: "Copy to_do to server"
  ansible.builtin.copy:
    src: "files/app.tar.gz"
    dest: "$HOME/to_do/app.tar.gz"
    follow: yes

- name: "Copy templates to server"
  ansible.builtin.copy:
    src: "files/templates.tar.gz"
    dest: "$HOME/templates/templates.tar.gz"
    follow: yes

- name: "Copy static to server"
  ansible.builtin.copy:
    src: "files/static.tar.gz"
    dest: "$HOME/static/static.tar.gz"
    follow: yes

- name: "Copy files to server"
  ansible.builtin.copy:
    src: "files/requirements.txt"
    dest: "$HOME/requirements.txt"
    follow: yes

- name: "Copy files to server"
  ansible.builtin.copy:
    src: "files/manage.py"
    dest: "$HOME/manage.py"
    follow: yes

# - name: "Copy files to server"
#   ansible.builtin.copy:
#     src: "files/db.sqlite3"
#     dest: "$HOME/db.sqlite3"
#     follow: yes

- name: "Copy files to server"
  ansible.builtin.copy:
    src: "files/nginx.default"
    dest: "/etc/nginx/sites-available/nginx.default"
    follow: yes

- name: create symlink
  file:
    src: /etc/nginx/sites-available/nginx.default
    dest: /etc/nginx/sites-enabled/task
    state: link


- name: "Copy files to server"
  ansible.builtin.copy:
    src: "files/gunicorn_config.py"
    dest: "$HOME/conf/gunicorn_config.py"
    follow: yes

- name: start gunicorn
  ansible.builtin.shell:
    gunicorn -c conf/gunicorn_config.py to_do.wsgi

- name: extract taskapp folder
  ansible.builtin.shell:
    cd ~/taskapp
    tar -xvf artifact.tar.gz .
    rm artifact.tar.gz

- name: extract to_do folder
  ansible.builtin.shell:
    cd ~/to_do
    tar -xvf app.tar.gz .
    rm app.tar.gz


- name: extract templates folder
  ansible.builtin.shell:
    cd ~/templates
    tar -xvf templates.tar.gz .
    rm templates.tar.gz

- name: extract static folder
  ansible.builtin.shell:
    cd ~/static
    tar -xvf static.tar.gz .
    rm static.tar.gz


- name: install python dependencies
  ansible.builtin.pip:
    requirements: $HOME/requirements.txt

# - name: start redis
#   ansible.builtin.shell:
#     redis-server


