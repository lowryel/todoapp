- name: update and upgrade system
  ansible.builtin.apt:
    upgrade: yes
    update_cache: yes
    cache_valid_time: 86400


- name: Print a message
  ansible.builtin.debug:
    msg: "this task runs after the example role"


- name: Install web server
  apt:
    name: nginx
    state: latest
    update_cache: yes


- name: python pip
  ansible.builtin.apt:
    name: python3-pip
    state: present

- name: create a directory
  ansible.builtin.file:
    path: ~/{{ item }}
    state: directory
  loop: 
    - taskapp
    - to_do
    - conf
    - static
    - templates


- name: "Copy files to server"
  become: true
  ansible.builtin.copy: 
    src: "files/artifact.tar.gz"
    dest: "~/taskapp/artifact.tar.gz"
    follow: yes

- name: "Copy to_do to server"
  become: true
  ansible.builtin.copy:
    src: "files/app.tar.gz"
    dest: "~/to_do/app.tar.gz"
    follow: yes

- name: "Copy templates to server"
  ansible.builtin.copy:
    src: "files/templates.tar.gz"
    dest: "~/templates/templates.tar.gz"
    follow: yes

- name: "Copy static to server"
  ansible.builtin.copy:
    src: "files/static.tar.gz"
    dest: "~/static/static.tar.gz"
    follow: yes

- name: "Copy files to server"
  ansible.builtin.copy:
    src: "files/requirements.txt"
    dest: "~/requirements.txt"
    follow: yes


# - name: "Copy files to server"
#   ansible.builtin.copy:
#     src: "files/db.sqlite3"
#     dest: "/mnt/db.sqlite3"
#     follow: yes


- name: install python dependencies
  ansible.builtin.pip:
    requirements: ~/requirements.txt

- name: "Copy files to server"
  ansible.builtin.copy:
    src: "files/manage.py"
    dest: "~/manage.py"
    follow: yes

# - name: "Copy files to server"
#   ansible.builtin.copy:
#     src: "files/db.sqlite3"
#     dest: "/mnt/db.sqlite3"
#     follow: yes



- name: extract taskapp folder
  become: true
  ansible.builtin.shell:
    cd ~/taskapp
    tar -xvf artifact.tar.gz .
    rm artifact.tar.gz

- name: extract to_do folder
  become: true
  ansible.builtin.shell:
    cd ~/to_do
    tar -xvf app.tar.gz .
    rm app.tar.gz


- name: extract templates folder
  become: true
  ansible.builtin.shell:
    cd ~/templates
    tar -xvf templates.tar.gz .
    rm templates.tar.gz

- name: extract static folder
  become: true
  ansible.builtin.shell:
    cd ~/static
    tar -xvf static.tar.gz .
    rm static.tar.gz


- name: "Copy files to server"
  ansible.builtin.copy:
    src: "files/nginx.default"
    dest: "/etc/nginx/sites-available/nginx.default"
    follow: yes

- name: create symlink
  file:
    src: /etc/nginx/sites-available/nginx.default
    dest: /etc/nginx/sites-enabled/task
    state: link


- name: "Copy files to server"
  ansible.builtin.copy:
    src: "files/gunicorn_config.py"
    dest: "~/conf/gunicorn_config.py"
    follow: yes

- name: start gunicorn
  ansible.builtin.shell:
    cd ~/
    gunicorn -c conf/gunicorn_config.py to_do.wsgi

# - name: start apache server
#   service:
#     name: nginx
#     state: started

- name: "run server server"
  ansible.builtin.shell:
    cd ~/
    python3 manage.py runserver

